{"version":3,"sources":["predict.js","App.js","reportWebVitals.js","index.js"],"names":["empty","counter","alldata","require","PredictButton","props","fetchPred","a","setState","state","isFetching","consect","i","push","slice","fetch","method","mode","headers","body","JSON","stringify","then","response","json","result","console","log","data","loaded","this","timer","setInterval","clearInterval","style","fontSize","fontWeight","textAlign","map","pred","Component","App","className","src","alt","height","width","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kvlmCACIA,EAAQ,GAMRC,EAAU,EAIRC,EAFMC,EAAQ,IAEC,KACAC,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAeRC,UAhBmB,sBAgBP,8BAAAC,EAAA,sDAMV,IAHA,EAAKC,SAAL,2BAAmB,EAAKC,OAAxB,IAA+BC,YAAY,KACvCC,EAAU,GAETC,EAAI,EAAGA,EAAI,EAAGA,IACjBD,EAAQE,KAAKX,EAAQD,EAAUW,GAAGE,MAAM,IAPhC,gBASJC,MA9BE,oCA8BS,CACfC,OAAQ,OAAQC,KAAM,OAAQC,QAAS,CACrC,eAAgB,mBAChB,8BAA+B,IAC/B,+BAAgC,kCAChC,+BAAgC,uEAC/BC,KAAMC,KAAKC,UAAU,CAAE,KAAQV,MAEjCW,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJC,QAAQC,IAAIF,GACe,YAAvBA,EAAM,UACRzB,EAAMa,KAAKY,EAAM,UAAgB,OAASA,EAAM,UAGhDzB,EAAMa,KAAKY,EAAM,WAEnBC,QAAQC,IAAI3B,GACZ,EAAKQ,SAAS,CAAEoB,KAAM5B,EAAO6B,QAAQ,OA3B/B,QA8BV5B,GAAoB,GACN,MACZA,EAAU,GAhCF,2CAdV,EAAKQ,MAAQ,CACXmB,KAAM,GACNC,QAAQ,EACRnB,YAAY,GALG,E,qDAQnB,WAAqB,IAAD,OAClBoB,KAAKxB,YACLwB,KAAKC,MAAQC,aAAY,kBAAM,EAAK1B,cAAa,O,kCAEnD,WACE2B,cAAcH,KAAKC,OACnBD,KAAKC,MAAQ,O,oBAuCf,WAAU,IAAD,OACP,OACE,gCACE,oBAAIG,MAAO,CAAEC,SAAU,OAAQC,WAAY,MAAOC,UAAW,UAA7D,8BACE,WACA,IAA0B,IAAtB,EAAK5B,MAAMoB,OACb,OACE,8BACE,8BAEI,EAAKpB,MAAMmB,KAAKU,KAAI,SAAAC,GAAI,OAAI,mBAAGL,MAAO,CAAEC,SAAU,OAAQC,WAAY,MAAOC,UAAW,UAA5D,SACzBE,WAPb,U,GA1DiCC,aCY5BC,MApBf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IALI,uGAKWC,IAAI,MAAMC,OAAO,MAAMC,MAAM,QACjD,6DAIF,+BACE,8BACE,cAAC,EAAD,2BCHKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3B,MAAK,YAAkD,IAA/C4B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4af5d162.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nvar empty = [];\r\nconst toString = (s) => {\r\n  if (typeof s !== 'string') return ''\r\n  if (s == 0) return \"Healthy\";\r\n  else return \"Mastitis\"\r\n}\r\nvar counter = 0\r\nconst url = \"http://127.0.0.1:5000/api/predict\"\r\nvar adata = require('./trainSet.json')\r\nconst packet = { \"data\": [0.06867524, 0.08660228, 0.08826797, 0.1990125, 0.87207229, -0.39312044] };\r\nconst alldata = adata['data']\r\nexport default class PredictButton extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      data: [],\r\n      loaded: false,\r\n      isFetching: false\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.fetchPred();\r\n    this.timer = setInterval(() => this.fetchPred(), 2000);\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.timer);\r\n    this.timer = null;\r\n  }\r\n  fetchPred = async () => {\r\n\r\n\r\n    this.setState({ ...this.state, isFetching: true });\r\n    var consect = []\r\n    var i;\r\n    for (i = 0; i < 6; i++) {\r\n      consect.push(alldata[counter + i].slice(2))\r\n    }\r\n    await fetch(url, {\r\n      method: 'POST', mode: 'cors', headers: {\r\n        'Content-Type': 'application/json',\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Access-Control-Allow-Methods\": \"POST, GET, OPTIONS, DELETE, PUT\",\r\n        \"Access-Control-Allow-Headers\": \"append,delete,entries,foreach,get,has,keys,set,values,Authorization\"\r\n      }, body: JSON.stringify({ \"data\": consect })\r\n    })\r\n      .then(response => response.json())\r\n      .then(result => {\r\n        console.log(result)\r\n        if (result[\"condition\"] == \"mastitis\") {\r\n          empty.push(result[\"condition\"] + \"    \" + result[\"pathogen\"]);\r\n        }\r\n        else {\r\n          empty.push(result[\"condition\"])\r\n        }\r\n        console.log(empty)\r\n        this.setState({ data: empty, loaded: true });\r\n\r\n      })\r\n    counter = counter + 6;\r\n    if (counter > 50000) {\r\n      counter = 0\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1 style={{ fontSize: '20px', fontWeight: '400', textAlign: 'center' }}>Live Predictions</h1>\r\n        {(() => {\r\n          if (this.state.loaded === true) {\r\n            return (\r\n              <div >\r\n                <div >\r\n                  {\r\n                    this.state.data.map(pred => <p style={{ fontSize: '20px', fontWeight: '400', textAlign: 'center' }}>\r\n                      {pred}</p>)\r\n                  }\r\n\r\n                </div>\r\n              </div>\r\n            )\r\n          }\r\n        })()}\r\n\r\n      </div>\r\n    );\r\n  }\r\n}","import './App.css';\nimport React, { Component } from 'react';\nimport PredictButton from './predict.js';\nconst logolink = \"http://s3-wp-lyleprintingandp.netdna-ssl.com/wp-content/uploads/2018/01/09060054/cow-354428_1280.jpg\"\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logolink} alt=\"cow\" height='30%' width='30%' />\n        <p>\n          A Milk Mastitis Predictor\n        </p>\n      </header>\n      <body>\n        <div>\n          <PredictButton>\n            YOLO\n          </PredictButton>\n        </div>\n      </body>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}